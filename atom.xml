<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.dltech.xyz</id>
    <title>Steven Jokes</title>
    <updated>2020-07-03T07:07:12.920Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.dltech.xyz"/>
    <link rel="self" href="https://blog.dltech.xyz/atom.xml"/>
    <subtitle>如果你想变强，那你最好知道自己有多弱！</subtitle>
    <logo>https://blog.dltech.xyz/images/avatar.png</logo>
    <icon>https://blog.dltech.xyz/favicon.ico</icon>
    <rights>All rights reserved 2020, Steven Jokes</rights>
    <entry>
        <title type="html"><![CDATA[简历]]></title>
        <id>https://blog.dltech.xyz/post/jian-li/</id>
        <link href="https://blog.dltech.xyz/post/jian-li/">
        </link>
        <updated>2020-07-03T07:06:50.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://blog.dltech.xyz/post-images/1593760016240.png" alt="简历" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea的正确配置]]></title>
        <id>https://blog.dltech.xyz/post/gridea-de-zheng-que-pei-zhi/</id>
        <link href="https://blog.dltech.xyz/post/gridea-de-zheng-que-pei-zhi/">
        </link>
        <updated>2020-07-01T19:20:15.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://blog.dltech.xyz/post-images/1593632122733.png" alt="keng" loading="lazy"><br>
不说了，三个小时，就是重定向301。。害得我装了这么多稀奇古怪的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[good-books]]></title>
        <id>https://blog.dltech.xyz/post/good-books/</id>
        <link href="https://blog.dltech.xyz/post/good-books/">
        </link>
        <updated>2020-07-01T14:56:10.000Z</updated>
        <content type="html"><![CDATA[<p>推荐些自己读过的好书。 微信读书： 书单<br>
<img src="https://github.com/dltech-xyz/good-books/raw/master/shudan.png" alt="书单" loading="lazy"><br>
Sybier的书单「2020年百书6.1完结！」 https://weread.qq.com/misc/booklist/358906697_7e9fYZVah</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Powershell配置 和 Terminal配置]]></title>
        <id>https://blog.dltech.xyz/post/powershell-pei-zhi/</id>
        <link href="https://blog.dltech.xyz/post/powershell-pei-zhi/">
        </link>
        <updated>2020-07-01T13:25:40.000Z</updated>
        <content type="html"><![CDATA[<p>效果图：<img src="https://blog.dltech.xyz/post-images/1593611155593.png" alt="效果图" loading="lazy"></p>
<h1 id="powershell">Powershell</h1>
<p>参考了：https://zhuanlan.zhihu.com/p/144610989<br>
因为PowerShell默认禁止运行脚本，需要首先开启权限，管理员模式运行PowerShell<br>
然后输入命令，并输入Y确认</p>
<p><code>set-ExecutionPolicy RemoteSigned</code></p>
<p>接着<br>
安装了visual stdio code并且添加了环境变量的可以直接在PowerShell中接着输入（推荐）</p>
<p><code>code $profile</code></p>
<pre><code>cls  #清除微软广告

$path = $pwd.path
if ( $path.split(&quot;\&quot;)[-1] -eq &quot;System32&quot; ) {
    # change default path to desktop
    $desktop = &quot;C:\Users\&quot; + $env:UserName + &quot;\Desktop\&quot;
    cd $desktop
}

Set-PSReadLineOption -Colors @{
    Command             = &quot;#e5c07b&quot;
    Number              = &quot;#cdd4d4&quot;
    Member              = &quot;#e06c75&quot;
    Operator            = &quot;#e06c75&quot;
    Type                = &quot;#78b6e9&quot;
    Variable            = &quot;#78b6e9&quot;
    Parameter           = &quot;#e06c75&quot;  #命令行参数颜色
    ContinuationPrompt  = &quot;#e06c75&quot;
    Default             = &quot;#cdd4d4&quot;
    Emphasis            = &quot;#e06c75&quot;
    #Error
    Selection           = &quot;#cdd4d4&quot;
    Comment             = &quot;#cdd4d4&quot;
    Keyword             = &quot;#e06c75&quot;
    String              = &quot;#78b6e9&quot;
}

function prompt
{
    #Write-Host(&quot;$pwd&gt;&quot;)
    $path = $pwd.path
    if ( -not $path.EndsWith(&quot;\&quot;) ) {
        &quot;&quot; + $path.split(&quot;\&quot;)[-1] + &quot; &gt; &quot;
    }
    else {
        &quot;&quot; + $path.split(&quot;\&quot;)[0] + &quot; &gt; &quot;
    }
}
···

---

# Terminal:
https://www.bilibili.com/read/cv4651123/
https://www.chuchur.com/article/windows-terminal-beautify

</code></pre>
<p>{<br>
&quot;$schema&quot;: &quot;https://aka.ms/terminal-profiles-schema&quot;,</p>
<pre><code>&quot;defaultProfile&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;,

// You can add more global application settings here.
// To learn more about global settings, visit https://aka.ms/terminal-global-settings

// If enabled, selections are automatically copied to your clipboard.
&quot;copyOnSelect&quot;: false,

// If enabled, formatted data is also copied to your clipboard
&quot;copyFormatting&quot;: false,

// A profile specifies a command to execute paired with information about how it should look and feel.
// Each one of them will appear in the 'New Tab' dropdown,
//   and can be invoked from the commandline with `wt.exe -p xxx`
// To learn more about profiles, visit https://aka.ms/terminal-profile-settings
&quot;profiles&quot;:
{
    &quot;defaults&quot;:
    {
        // Put settings here that you want to apply to all profiles.
        &quot;acrylicOpacity&quot;: 0.8, //背景透明度
        &quot;useAcrylic&quot;: true, // 启用毛玻璃
        &quot;backgroundImage&quot;: &quot;https://area.sinaapp.com/bingImg/&quot;, //bing每日
        &quot;backgroundImageOpacity&quot;: 0.5//图片透明度
    },
    &quot;list&quot;:
    [
        {
            // Make changes here to the powershell.exe profile.
            &quot;guid&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;,
            &quot;name&quot;: &quot;Windows PowerShell&quot;,
            &quot;commandline&quot;: &quot;powershell.exe&quot;,
            &quot;hidden&quot;: false
        },
        {
            // Make changes here to the cmd.exe profile.
            &quot;guid&quot;: &quot;{0caa0dad-35be-5f56-a8ff-afceeeaa6101}&quot;,
            &quot;name&quot;: &quot;Command Prompt&quot;,
            &quot;commandline&quot;: &quot;cmd.exe&quot;,
            &quot;hidden&quot;: false
        },
        {
            &quot;guid&quot;: &quot;{b453ae62-4e3d-5e58-b989-0a998ec441b8}&quot;,
            &quot;hidden&quot;: false,
            &quot;name&quot;: &quot;Azure Cloud Shell&quot;,
            &quot;source&quot;: &quot;Windows.Terminal.Azure&quot;
        }
    ]
},

// Add custom color schemes to this array.
// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes
&quot;schemes&quot;: [],

// Add custom keybindings to this array.
// To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.
// To learn more about keybindings, visit https://aka.ms/terminal-keybindings
&quot;keybindings&quot;:
[
    // Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.
    // These two lines additionally bind them to Ctrl+C and Ctrl+V.
    // To learn more about selection, visit https://aka.ms/terminal-selection
    { &quot;command&quot;: {&quot;action&quot;: &quot;copy&quot;, &quot;singleLine&quot;: false }, &quot;keys&quot;: &quot;ctrl+c&quot; },
    { &quot;command&quot;: &quot;paste&quot;, &quot;keys&quot;: &quot;ctrl+v&quot; },

    // Press Ctrl+Shift+F to open the search box
    { &quot;command&quot;: &quot;find&quot;, &quot;keys&quot;: &quot;ctrl+shift+f&quot; },

    // Press Alt+Shift+D to open a new pane.
    // - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.
    // - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane's profile.
    // To learn more about panes, visit https://aka.ms/terminal-panes
    { &quot;command&quot;: { &quot;action&quot;: &quot;splitPane&quot;, &quot;split&quot;: &quot;auto&quot;, &quot;splitMode&quot;: &quot;duplicate&quot; }, &quot;keys&quot;: &quot;alt+shift+d&quot; }
]
</code></pre>
<p>}</p>
<pre><code></code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ 配置]]></title>
        <id>https://blog.dltech.xyz/post/c-pei-zhi/</id>
        <link href="https://blog.dltech.xyz/post/c-pei-zhi/">
        </link>
        <updated>2020-07-01T12:07:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-json">{
    &quot;configurations&quot;: [
        {
            &quot;name&quot;: &quot;Win32&quot;,
            &quot;includePath&quot;: [
                &quot;${workspaceFolder}/**&quot;
            ],
            &quot;defines&quot;: [
                &quot;_DEBUG&quot;,
                &quot;UNICODE&quot;,
                &quot;_UNICODE&quot;
            ],
            &quot;intelliSenseMode&quot;: &quot;gcc-x64&quot;,
            &quot;cStandard&quot;: &quot;c11&quot;,
            &quot;cppStandard&quot;: &quot;c++17&quot;,
            &quot;compilerPath&quot;: &quot;C:/mingw64/bin/g++.exe&quot;
        }
    ],
    &quot;version&quot;: 4
}
</code></pre>
<hr>
<pre><code class="language-json">{//task.json
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	// https://code.visualstudio.com/docs/editor/tasks
	&quot;version&quot;: &quot;2.0.0&quot;,
	&quot;tasks&quot;: [{
			&quot;type&quot;: &quot;shell&quot;,
			&quot;label&quot;: &quot;C/C++: g++.exe build active file&quot;, // 任务名称，与launch.json的preLaunchTask相对应
			&quot;command&quot;: &quot;g++&quot;,//要使用的编译器，c用gcc
			&quot;args&quot;: [
				&quot;${file}&quot;,
				&quot;-o&quot;,// 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
				&quot;${fileDirname}/${fileBasenameNoExtension}.exe&quot;,
				&quot;-g&quot;,    // 生成和调试有关的信息
				&quot;-Wall&quot;, // 开启额外警告
				&quot;-static-libgcc&quot;,     // 静态链接libgcc，一般都会加上
				&quot;-fexec-charset=GBK&quot;, // 生成的程序使用GBK编码，不加这一条会导致Win下输出中文乱码
				// &quot;-std=c11&quot;, // C++最新标准为c++17，或根据自己的需要进行修改
			], // 编译的命令，其实相当于VSC帮你在终端中输了这些东西
			&quot;group&quot;: {
				&quot;kind&quot;: &quot;build&quot;,
				&quot;isDefault&quot;: true // 不为true时ctrl shift B就要手动选择了
			},
			&quot;presentation&quot;: {
				&quot;echo&quot;: true,
				&quot;reveal&quot;: &quot;always&quot;, // 执行任务时是否跳转到终端面板，可以为always，silent，never。具体参见VSC的文档
				&quot;focus&quot;: false,     // 设为true后可以使执行task时焦点聚集在终端，但对编译C/C++来说，设为true没有意义
				&quot;panel&quot;: &quot;shared&quot;   // 不同的文件的编译信息共享一个终端面板
			},
			&quot;problemMatcher&quot;: []
			//&quot;type&quot;: &quot;process&quot;, // process是vsc把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
			// &quot;problemMatcher&quot;:&quot;$gcc&quot; // 此选项可以捕捉编译时终端里的报错信息；但因为有Lint，再开这个可能有双重报

	}],
}

</code></pre>
<hr>
<pre><code class="language-json">{//launch.json
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    // https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md
    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [{
            &quot;name&quot;: &quot;(gdb) Launch&quot;,// 配置名称，将会在启动配置的下拉菜单中显示
            &quot;preLaunchTask&quot;: &quot;C/C++: g++.exe build active file&quot;,//调试前执行的任务，就是之前配置的tasks.json中的label字段
            &quot;type&quot;: &quot;cppdbg&quot;,//配置类型，cppdbg对应cpptools提供的调试功能；可以认为此处只能是cppdbg
            &quot;request&quot;: &quot;launch&quot;,//请求配置类型，可以为launch（启动）或attach（附加）
            &quot;program&quot;: &quot;${fileDirname}\\${fileBasenameNoExtension}.exe&quot;,//调试程序的路径名称
            &quot;args&quot;: [],//程序调试时传递给程序的命令行参数，一般设为空即可
            &quot;stopAtEntry&quot;: false,// 设为true时程序将暂停在程序入口处，相当于在main上打断点
            &quot;cwd&quot;: &quot;${workspaceFolder}&quot;,// 调试程序时的工作目录，此为工作区文件夹；改成${fileDirname}可变为文件所在目录
            &quot;environment&quot;: [],// 环境变量
            &quot;externalConsole&quot;: true,//true显示外置的控制台窗口，false显示内置终端
            &quot;internalConsoleOptions&quot;: &quot;neverOpen&quot;, // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，你应该不需要对gdb手动输命令吧？
            &quot;MIMode&quot;: &quot;gdb&quot;,
            &quot;miDebuggerPath&quot;: &quot;gdb.exe&quot;,//调试器路径，Windows下后缀不能省略，Linux下则不要:https://github.com/microsoft/vscode-cpptools/issues/2778
            &quot;setupCommands&quot;: [
                {// 模板自带，好像可以更好地显示STL容器的内容，具体作用自行Google
                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,
                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,
                    &quot;ignoreFailures&quot;: true
                }
            ]
        }]
}
</code></pre>
<hr>
<p>sftp.json</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;tfae.dtx&quot;,
    &quot;protocol&quot;: &quot;sftp&quot;,
    &quot;host&quot;: &quot;10.xxxxxxxx.22&quot;,
    &quot;port&quot;: 36000,
    &quot;username&quot;: &quot;xxxxxxxx&quot;,
    &quot;password&quot;: &quot;xxxxxx&quot;,
    &quot;uploadOnSave&quot;: true,
    &quot;ignore&quot;: [
        &quot;\\.VSCode&quot;,
        &quot;\\.git&quot;,
        &quot;\\.DS_Store&quot;,
        &quot;\\.svn&quot;,
        &quot;\\.history&quot;,
        &quot;\\.IAB&quot;,
        &quot;\\.IAD&quot;,
        &quot;\\.IMB&quot;,
        &quot;\\.IMD&quot;,
        &quot;\\.PFI&quot;,
        &quot;\\.PO&quot;,
        &quot;\\.PR&quot;,
        &quot;\\.PRI&quot;,
        &quot;\\.PS&quot;,
        &quot;\\.WK3&quot;
    ],
    &quot;remotePath&quot;: &quot;/root/home/denniszhu/tarsCpp&quot;
}
</code></pre>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ CAE Stamping Simulation]]></title>
        <id>https://blog.dltech.xyz/post/cae-stamping-simulation/</id>
        <link href="https://blog.dltech.xyz/post/cae-stamping-simulation/">
        </link>
        <updated>2020-06-29T14:12:23.000Z</updated>
        <content type="html"><![CDATA[<p>研究了下。。。啊 太菜了</p>
<h2 id="人httpsi-itemjdcom45305383903html">人：https://i-item.jd.com/45305383903.html&gt;</h2>
<h2 id="书">书：</h2>
<ul>
<li>冲压CAE技术应用（附光盘）：<a href="https://item.jd.com/11886860.html">https://item.jd.com/11886860.html</a></li>
<li>金属塑性成形CAE应用：DYNAFORM：<a href="https://item.jd.com/11605475.html">https://item.jd.com/11605475.html</a></li>
<li>板料成形CAE设计及应用：基于Dynaform（英文） [CAE Design and Application of Sheet Metal Forming：Based on Dynaform]：<a href="https://item.jd.com/12628936.html">https://item.jd.com/12628936.html</a></li>
</ul>
<p>https://1drv.ms/w/s!AmvfcA2CS8LNgskmXQJEE8PgHvVMrA</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Leetcode_Container With Most Water]]></title>
        <id>https://blog.dltech.xyz/post/leetcode_container-with-most-water/</id>
        <link href="https://blog.dltech.xyz/post/leetcode_container-with-most-water/">
        </link>
        <updated>2020-06-27T18:12:17.000Z</updated>
        <content type="html"><![CDATA[<p>https://leetcode.com/submissions/detail/359042687/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[字符串]]></title>
        <id>https://blog.dltech.xyz/post/zi-fu-chuan/</id>
        <link href="https://blog.dltech.xyz/post/zi-fu-chuan/">
        </link>
        <updated>2020-06-10T02:09:53.000Z</updated>
        <content type="html"><![CDATA[<p>https://github.com/StevenJokes/Alg_Py_Xiangjie/blob/master/%E7%AC%AC4%E7%AB%A0/zifuchuan.py</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[加油]]></title>
        <id>https://blog.dltech.xyz/post/jia-you/</id>
        <link href="https://blog.dltech.xyz/post/jia-you/">
        </link>
        <updated>2020-06-08T03:03:36.000Z</updated>
        <content type="html"><![CDATA[<p>https://github.com/StevenJokes/Alg_Py_Xiangjie/blob/master/%E7%AC%AC3%E7%AB%A0/jiayou.py</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[零钱]]></title>
        <id>https://blog.dltech.xyz/post/ling-qian/</id>
        <link href="https://blog.dltech.xyz/post/ling-qian/">
        </link>
        <updated>2020-06-07T15:42:49.000Z</updated>
        <content type="html"><![CDATA[<h1 id="342-实践演练解决找零问题">3.4.2 实践演练——解决“找零”问题</h1>
<h2 id="为了说明贪心算法的基本用法接下来将通过一个具体实例的实现过程详细讲解解决找零问题的方法">为了说明贪心算法的基本用法，接下来将通过一个具体实例的实现过程，详细讲解解决“找零”问题的方法。</h2>
<h3 id="1问题描述">1.问题描述</h3>
<p>假设只有1分、2分、5分、1角、2角、5角、1元面值的硬币。在超市结账时，如果需要找零钱，收银员希望将最少的硬币数找给顾客。那么，给定需要找的零钱数目，如何求得最少的硬币数呢？</p>
<h3 id="2算法分析">2.算法分析</h3>
<p>在找零钱时可以有多种方案，例如补零钱0.5元时可有以下方案。<br>
（1）1枚0.5元硬币。<br>
（2）2枚0.2元硬币、1枚0.1元硬币。<br>
（3）5枚0.1元硬币。……</p>
<h3 id="3具体实现编写实例文件lingpy具体实现代码如下所示">3.具体实现编写实例文件ling.py，具体实现代码如下所示。</h3>
<p>https://github.com/StevenJokes/Alg_Py_Xiangjie/blob/master/%E7%AC%AC3%E7%AB%A0/ling.py#L20</p>
]]></content>
    </entry>
</feed>