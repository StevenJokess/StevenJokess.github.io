<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.dltech.xyz</id>
    <title>Steven Jokes</title>
    <updated>2020-07-15T07:04:23.710Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.dltech.xyz"/>
    <link rel="self" href="https://blog.dltech.xyz/atom.xml"/>
    <subtitle>如果你想变强，那你最好知道自己有多弱！</subtitle>
    <logo>https://blog.dltech.xyz/images/avatar.png</logo>
    <icon>https://blog.dltech.xyz/favicon.ico</icon>
    <rights>All rights reserved 2020, Steven Jokes</rights>
    <entry>
        <title type="html"><![CDATA[Teach you PyTorch mobile for android by creating a demo app hand-by-hand]]></title>
        <id>https://blog.dltech.xyz/post/pytorch-android/</id>
        <link href="https://blog.dltech.xyz/post/pytorch-android/">
        </link>
        <updated>2020-07-11T12:22:44.000Z</updated>
        <content type="html"><![CDATA[<h2 id="there-are-some-bugs-in-videos-not-shown">There are some ** bugs** in videos not shown!</h2>
<h2 id="my-github-repo">My github repo:</h2>
<p>https://github.com/StevenJokes/pytorch-andriod-greatdemo</p>
<h2 id="my-blog">My blog:</h2>
<p>https://blog.dltech.xyz/post/pytorch-android/</p>
<h1 id="part-one">Part One:</h1>
<p>I'm a Chinese guy and a Win10 user! So if you can't understand my sentences, give me an issue and I will do my best to help you. Linux users can also get help from my article too.</p>
<p>I'll share you all my research process. (It cost me two days and two nights..) And I will tell you <strong>how to have a demo app for android in English</strong>.</p>
<p>I'm new to Android and PyTorch too. If you are learning or have mastered in them, you can telegram me and maybe we will become good friends. And I'm applying for a job now, please email me at llgg8679@qq.com if you like me.</p>
<p>It's my first share about a newest tech. <em>Please please please!</em> give my repo a <strong>star</strong> and <strong>fork</strong> if you find it helpful.</p>
<h2 id="what-we-need">What we need:</h2>
<ol>
<li>Anaconda(you could use miniconda to <code>conda install</code> too).</li>
<li>Git (bet you guys all have it)for <code>git clone https://github.com/pytorch/android-demo-app</code></li>
<li>Android Studio 3.5.1+ ，Android SDK and Android NDK (For win10 users, I suggest to use chocolaty to install, see the following &quot;Install android dev&quot;.) which are required from https://pytorch.org/mobile/android/.</li>
<li>Watch again: https://www.youtube.com/watch?v=O_2KBhkIvnc by 0.1 speed.</li>
</ol>
<h2 id="create-pytorch-nightly-environment">Create pytorch-nightly environment</h2>
<p>In your cmd, create pytorch-nightly environment called pytorch_n(It is necessary to use <code>pytorch.jit</code>)</p>
<pre><code class="language-cmd">conda create -n pytorch_n 
conda activate pytorch_n
</code></pre>
<p>I only have cpu (if you are rich, please help me to get my own GPU workstation.) You can find GPU pytorch-nightly version to install in https://pytorch.org/get-started/locally/.</p>
<pre><code class="language-cmd">conda install pytorch torchvision cpuonly -c pytorch-nightly -y
</code></pre>
<h2 id="git-clone">Git clone</h2>
<p>In your cmd,</p>
<pre><code class="language-cmd">git clone https://github.com/pytorch/android-demo-app
</code></pre>
<h2 id="open-folder">Open folder</h2>
<p>Then open your &quot;HelloWorldApp&quot; (It is necessary to use <code>pytorch.jit.save</code>, or you will get error.)  folder in android-domo-app by <code>cd</code> or clicking.</p>
<p>Here, I used VScode to open &quot;HelloWorldApp&quot; folder.<br>
(Thanks for &quot;you need to have the same module/file/dir heirarchy or else it will crash.&quot; in https://github.com/pytorch/pytorch/issues/31620)</p>
<h2 id="save-my-model">Save my model</h2>
<p>Open the trace_model.py, and save it as trace_model_me.py.</p>
<p>I read https://pytorch.org/mobile/android/ and  https://pytorch.org/docs/master/generated/torch.jit.save.html#torch.jit.save.I use <code>m</code> to replace <code>traced_script_module</code>. I named my model as model_me.pt.</p>
<pre><code class="language-python">import torch
import torchvision

model = torchvision.models.resnet18(pretrained=True)
model.eval()
example = torch.rand(1, 3, 224, 224)
m = torch.jit.trace(model, example) #  
m.save(&quot;app/src/main/assets/model_me.pt&quot;)
</code></pre>
<p>Must in &quot;HelloWorldApp&quot;!<img src="https://blog.dltech.xyz/post-images/1594475049132.png" alt="" loading="lazy"><br>
We can see how many times I tried!(Cost me 6 hours. cry!)<br>
<img src="https://blog.dltech.xyz/post-images/1594474096806.png" alt="tried" loading="lazy"></p>
<p>If you are in android-demo-app,error wil get you crazy.<br>
<img src="https://blog.dltech.xyz/post-images/1594474241776.png" alt="Error" loading="lazy"></p>
<h2 id="install-android-dev">Install android dev</h2>
<p><code>choco install android-sdk, android-ndk, androidstudio</code></p>
<p>My version: android-sdk 26.1.1, android-ndk 21.4, androidstudio 4.0.0.16.</p>
<p>Then open &quot;android Studio&quot;. I'm using proxy to get quicker network.</p>
<p><img src="https://blog.dltech.xyz/post-images/1594475620751.png" alt="proxy" loading="lazy"><br>
<img src="https://blog.dltech.xyz/post-images/1594475671153.png" alt="jre" loading="lazy"><br>
<img src="https://blog.dltech.xyz/post-images/1594475715350.png" alt="components" loading="lazy"></p>
<p>Here, I didn' install Virtual Device. We can install it when we need. I used it in my following step.</p>
<h2 id="create-new-project">Create New Project</h2>
<p><img src="https://blog.dltech.xyz/post-images/1594475886535.png" alt="empty activity" loading="lazy"><br>
<img src="https://blog.dltech.xyz/post-images/1594475910656.png" alt="configure" loading="lazy"><br>
<img src="https://blog.dltech.xyz/post-images/1594475946465.png" alt="enable" loading="lazy"></p>
<hr>
<p>#Part Two:</p>
<h2 id="buildgradle-appear">build.gradle appear!</h2>
<p>Then I found I don't have &quot;build.gradle(Module: app)&quot;</p>
<p>Then I learnt some knowledge : https://developer.android.com/training/basics/firstapp/creating-project<br>
Gradle Scripts &gt; build.gradle<br>
There are two files with this name: one for the project, &quot;Project: My First App,&quot; and one for the app module, &quot;Module: app.&quot; Each module has its own build.gradle file, but this project currently has just one module. Use each module's build.file to control how the Gradle plugin builds your app. For more information about this file, see Configure your build.</p>
<p><img src="https://blog.dltech.xyz/post-images/1594795763502.png" alt="sync" loading="lazy"><br>
<img src="https://blog.dltech.xyz/post-images/1594795946268.png" alt="sync_success" loading="lazy"><br>
<img src="https://blog.dltech.xyz/post-images/1594795976147.png" alt="appear" loading="lazy"></p>
<h2 id="add-implementation">add implementation</h2>
<p><code>jcenter()</code> has already appear</p>
<pre><code class="language-java">implementation'org.pytorch:pytorch_android:1.5.0'
implementation'org.pytorch:pytorch_android_torchvision:1.5.0'
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://blog.dltech.xyz/post-images/1594796106557.png" alt="implementation" loading="lazy"></figure>
<h2 id="move-some-files-and-rename">move some files and rename</h2>
<figure data-type="image" tabindex="2"><img src="https://blog.dltech.xyz/post-images/1594796500856.png" alt="new_dir" loading="lazy"></figure>
<p>move<br>
<img src="https://blog.dltech.xyz/post-images/1594796415709.png" alt="" loading="lazy"></p>
<h1 id="part-three-todotired-again-if-you-need-the-tutorial-please-star-and-watch-the-repoill-update-if-50-stars-or-watch">Part Three: TODO:tired again. If you need the tutorial, please star and watch the repo.(I'll update if &gt;50 stars or watch)</h1>
<h2 id="what-we-got">What we got:</h2>
<figure data-type="image" tabindex="3"><img src="https://blog.dltech.xyz/post-images/1594476102427.png" alt="demo app" loading="lazy"></figure>
<h2 id="for-more-资料收集not-so-related-about-the-app-so-itll-be-in-chinese">For more:  资料收集(not so related about the app, so it'll be in Chinese)：</h2>
<p>搭个model server，远程call api就好了，目前javascript没有很好的植入，做的还行的就是tf javascript。Torchserve可用来host pt模型<br>
torch mobile模式<br>
来自 <a href="https://www.zhihu.com/question/393499221">https://www.zhihu.com/question/393499221</a></p>
<p>However if you’re aiming for edge deployment or you want to squeeze as much raw performance as possible, your best bet right now is to use ONNX 32. You can export 5 your PyTorch model in ONNX format and then use another framework (like caffe2, MXNet, CNTK, etc.) to actually run the model, these other frameworks do support edge and/or have specialized deployment extensions (e.g. the MXNet model server 20 which can also serve ONNX models directly).<br>
来自 <a href="https://discuss.pytorch.org/t/pytorch-models-for-production/18115">https://discuss.pytorch.org/t/pytorch-models-for-production/18115</a></p>
<p>libtorch是深坑，还是onnx靠谱<br>
graphpipe了解一下<br>
PyTorch模型到Android<br>
1.2，使用onnx-tensorflow 项目，再从tensorflow转；<br>
不支持空洞卷积、prelu...放弃了。<br>
1.3，使用MMdnn项目转化为IR，再从IR转换为tensorflow或者keras，再到tflite；<br>
使用命令：<br>
mmtoir -f pytorch -d gemfieldnet --inputShape 3,512,1024 -n model.pth<br>
解决无望！放弃了。<br>
2，Pytorch到NCNN<br>
通过onnx转换，刚开始（2019年1月25日）ncnn不支持upsample，在合并了Gemfield的一些PR后，终于可以转换成功了。详细使用方法，请参考NCNN官方。<br>
推荐方法是使用PytorchConverter github地址：https://github.com/starimeL/PytorchConverter<br>
3，PyTorch到小米的MACE<br>
通过onnx转换，不过目前（2019年1月25日）不支持卷积核的group参数，不支持upsample，放弃。<br>
Pytorch的模型不能直接被MNN进行解析，所以我们这里需要选定一个媒介。参考之前专栏的一篇文章《整合mxnet和MNN的嵌入式部署流程》，这里也采用ONNX进行pytorch和MNN之间的桥梁。<br>
方案一：利用腾讯开源的ncnn库(nihui大神牛皮！！)；但这个适合移动端部署，特别是针对andriod的极致优化。<br>
编译ncnn的准备工作：g++, cmake，protobuf,opencv，<br>
前两个不必说，很容易。其中安装protobuf和opencv都可以分别写一篇博客了。</p>
<p>来自 <a href="https://www.zhihu.com/search?type=content&amp;q=pytorch%20%E9%83%A8%E7%BD%B2%20%E5%B0%8F%E7%A8%8B%E5%BA%8F">https://www.zhihu.com/search?type=content&amp;q=pytorch 部署 小程序</a></p>
<pre><code>	Use compatible model saving &amp; loading method, e.g.
	# Saving, notice the difference on DataParallel
net_for_saving = net.module if use_nn_DataParallel else net
torch.save(net_for_saving.state_dict(), path)
	# Loading
net.load_state_dict(torch.load(path, map_location=lambda storge, loc: storage))
</code></pre>
<p>来自 <a href="https://github.com/starimeL/PytorchConverter">https://github.com/starimeL/PytorchConverter</a></p>
<p>Pytorch 模型部署到服务器有没有什么好的方案?<br>
Lanking<br>
​<br>
AWS AI算法工程师<br>
torchserve了解一下。也可以用DJL，如果你的服务器是java的。<br>
DJL.ai​DJL.ai</p>
<p>PyTorch项目移植到移动端目前有两种方案：</p>
<ol>
<li>把PyTorch模型转成专门的部署框架模型，比如NCNN、TVM之类的，可能需要经过ONNX中转。优点是：NCNN、TVM这种专门的部署框架下的模型推理速度比较快；缺点是：转换过程中可能会出现各种操作不支持，需要有解决这些问题的工程能力。</li>
<li>使用PyTorch Mobile，即将PyTorch模型转成TorchScript模型，可以利用PyTorchMobile的java接口调用。这个方法的有点是：TorchScript支持控制流，所以不需要对项目代码做多大修改，就可以迁移到移动端；缺点是：速度拼不过专门的部署框架，如果模型比较大的话，转换之后可能会发现明显的速度下降。<br>
发布于 03-08<br>
来自 <a href="https://www.zhihu.com/search?type=content&amp;q=pytorch%20mobile">https://www.zhihu.com/search?type=content&amp;q=pytorch mobile</a></li>
</ol>
<p>TorchServe库同时支持Python和TorchScript模型；它可以同时运行一个模型的多个版本，甚至可以在模型存档中回滚到过去的版本。亚马逊工程师在一篇博文中表示，超过80%的使用PyTorch的云机器学习项目是在AWS上进行的。<br>
来自 <a href="https://www.zhihu.com/search?type=content&amp;q=pytorch%20mobile">https://www.zhihu.com/search?type=content&amp;q=pytorch mobile</a></p>
<p>在2019年10月举行的年度PyTorch开发者大会上，Facebook首次介绍了Google Cloud TPU支持和量化以及PyTorch Mobile。<br>
来自 <a href="https://www.zhihu.com/search?type=content&amp;q=pytorch%20mobile">https://www.zhihu.com/search?type=content&amp;q=pytorch mobile</a></p>
<p>另外10分感谢小伙伴的友情指导。（突然发现我司的框架编译难度已经很容易了.......233）<br>
OAID/Tengine​github.com<br>
Tencent/ncnn​github.com<br>
Tencent/FeatherCNN​github.com<br>
XiaoMi/mace​github.com<br>
alibaba/MNN​github.com<br>
已经提前git clone完毕Paddle-Lite的repo，配置好ANDROID_NDK路径（ncnn、mnn、mace、Tengine均能识别）<br>
来自 <a href="https://www.zhihu.com/question/341980046">https://www.zhihu.com/question/341980046</a></p>
<p>没有人敢用不维护的开源项目，即使你曾经速度最快，功能最强，技术最先进<br>
没有人敢用可能不到一年便不维护的开源项目，即使你现在速度最快，功能最强，技术最先进<br>
来自 <a href="https://www.zhihu.com/question/341980046">https://www.zhihu.com/question/341980046</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[OneNote hosts]]></title>
        <id>https://blog.dltech.xyz/post/onenote-hosts/</id>
        <link href="https://blog.dltech.xyz/post/onenote-hosts/">
        </link>
        <updated>2020-07-08T09:05:18.000Z</updated>
        <content type="html"><![CDATA[<p>C:\Windows\System32\drivers\etc\hosts</p>
<pre><code># https://ping.chinaz.com/skyapi.onedrive.live.com
13.107.42.13 onedrive.live.com
199.59.148.140 skyapi.onedrive.live.com

# https://www.boce.com/ping/skyapi.onedrive.live.com
199.59.148.140 skyapi.onedrive.live.com
203.208.39.99 skyapi.onedrive.live.com
31.13.72.54 onedrive.live.com
203.208.39.99 onedrive.live.com
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[开发期待中]]></title>
        <id>https://blog.dltech.xyz/post/kai-fa-qi-dai-zhong/</id>
        <link href="https://blog.dltech.xyz/post/kai-fa-qi-dai-zhong/">
        </link>
        <updated>2020-07-05T13:13:51.000Z</updated>
        <content type="html"><![CDATA[<p>Windows Terminal + WSL 2+ VS Code （online: CodeSpaces) + Stack Overflow + O'reilly + GitHub + winget</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[简历]]></title>
        <id>https://blog.dltech.xyz/post/jian-li/</id>
        <link href="https://blog.dltech.xyz/post/jian-li/">
        </link>
        <updated>2020-07-03T07:06:50.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://blog.dltech.xyz/post-images/1593844414259.png" alt="" loading="lazy"><br>
此外还有划水成就，2018年度知乎两亿字、酷我音乐很多首（真忘了）</p>
<p>有意向的请发件到：llgg8679@qq.com</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea的正确配置]]></title>
        <id>https://blog.dltech.xyz/post/gridea-de-zheng-que-pei-zhi/</id>
        <link href="https://blog.dltech.xyz/post/gridea-de-zheng-que-pei-zhi/">
        </link>
        <updated>2020-07-01T19:20:15.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://blog.dltech.xyz/post-images/1593632122733.png" alt="keng" loading="lazy"><br>
不说了，三个小时，就是重定向301。。害得我装了这么多稀奇古怪的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[good-books]]></title>
        <id>https://blog.dltech.xyz/post/good-books/</id>
        <link href="https://blog.dltech.xyz/post/good-books/">
        </link>
        <updated>2020-07-01T14:56:10.000Z</updated>
        <content type="html"><![CDATA[<p>推荐些自己读过的好书。 微信读书： 书单<br>
<img src="https://github.com/dltech-xyz/good-books/raw/master/shudan.png" alt="书单" loading="lazy"><br>
Sybier的书单「2020年百书6.1完结！」 https://weread.qq.com/misc/booklist/358906697_7e9fYZVah</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Powershell配置 和 Terminal配置]]></title>
        <id>https://blog.dltech.xyz/post/powershell-pei-zhi/</id>
        <link href="https://blog.dltech.xyz/post/powershell-pei-zhi/">
        </link>
        <updated>2020-07-01T13:25:40.000Z</updated>
        <content type="html"><![CDATA[<p>效果图：<img src="https://blog.dltech.xyz/post-images/1593611155593.png" alt="效果图" loading="lazy"></p>
<h1 id="powershell">Powershell</h1>
<p>参考了：https://zhuanlan.zhihu.com/p/144610989<br>
因为PowerShell默认禁止运行脚本，需要首先开启权限，管理员模式运行PowerShell<br>
然后输入命令，并输入Y确认</p>
<p><code>set-ExecutionPolicy RemoteSigned</code></p>
<p>接着<br>
安装了visual studio code并且添加了环境变量的可以直接在PowerShell中接着输入（推荐）</p>
<p><code>code $profile</code></p>
<pre><code>cls  #清除微软广告

$path = $pwd.path
if ( $path.split(&quot;\&quot;)[-1] -eq &quot;System32&quot; ) {
    # change default path to desktop
    $desktop = &quot;C:\Users\&quot; + $env:UserName + &quot;\Desktop\&quot;
    cd $desktop
}

Set-PSReadLineOption -Colors @{
    Command             = &quot;#e5c07b&quot;
    Number              = &quot;#cdd4d4&quot;
    Member              = &quot;#e06c75&quot;
    Operator            = &quot;#e06c75&quot;
    Type                = &quot;#78b6e9&quot;
    Variable            = &quot;#78b6e9&quot;
    Parameter           = &quot;#e06c75&quot;  #命令行参数颜色
    ContinuationPrompt  = &quot;#e06c75&quot;
    Default             = &quot;#cdd4d4&quot;
    Emphasis            = &quot;#e06c75&quot;
    #Error
    Selection           = &quot;#cdd4d4&quot;
    Comment             = &quot;#cdd4d4&quot;
    Keyword             = &quot;#e06c75&quot;
    String              = &quot;#78b6e9&quot;
}

function prompt
{
    #Write-Host(&quot;$pwd&gt;&quot;)
    $path = $pwd.path
    if ( -not $path.EndsWith(&quot;\&quot;) ) {
        &quot;&quot; + $path.split(&quot;\&quot;)[-1] + &quot; &gt; &quot;
    }
    else {
        &quot;&quot; + $path.split(&quot;\&quot;)[0] + &quot; &gt; &quot;
    }
}
···

---

# Terminal:
https://www.bilibili.com/read/cv4651123/
https://www.chuchur.com/article/windows-terminal-beautify

</code></pre>
<p>{<br>
&quot;$schema&quot;: &quot;https://aka.ms/terminal-profiles-schema&quot;,</p>
<pre><code>&quot;defaultProfile&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;,

// You can add more global application settings here.
// To learn more about global settings, visit https://aka.ms/terminal-global-settings

// If enabled, selections are automatically copied to your clipboard.
&quot;copyOnSelect&quot;: false,

// If enabled, formatted data is also copied to your clipboard
&quot;copyFormatting&quot;: false,

// A profile specifies a command to execute paired with information about how it should look and feel.
// Each one of them will appear in the 'New Tab' dropdown,
//   and can be invoked from the commandline with `wt.exe -p xxx`
// To learn more about profiles, visit https://aka.ms/terminal-profile-settings
&quot;profiles&quot;:
{
    &quot;defaults&quot;:
    {
        // Put settings here that you want to apply to all profiles.
        &quot;acrylicOpacity&quot;: 0.8, //背景透明度
        &quot;useAcrylic&quot;: true, // 启用毛玻璃
        &quot;backgroundImage&quot;: &quot;https://area.sinaapp.com/bingImg/&quot;, //bing每日
        &quot;backgroundImageOpacity&quot;: 0.5//图片透明度
    },
    &quot;list&quot;:
    [
        {
            // Make changes here to the powershell.exe profile.
            &quot;guid&quot;: &quot;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&quot;,
            &quot;name&quot;: &quot;Windows PowerShell&quot;,
            &quot;commandline&quot;: &quot;powershell.exe&quot;,
            &quot;hidden&quot;: false
        },
        {
            // Make changes here to the cmd.exe profile.
            &quot;guid&quot;: &quot;{0caa0dad-35be-5f56-a8ff-afceeeaa6101}&quot;,
            &quot;name&quot;: &quot;Command Prompt&quot;,
            &quot;commandline&quot;: &quot;cmd.exe&quot;,
            &quot;hidden&quot;: false
        },
        {
            &quot;guid&quot;: &quot;{b453ae62-4e3d-5e58-b989-0a998ec441b8}&quot;,
            &quot;hidden&quot;: false,
            &quot;name&quot;: &quot;Azure Cloud Shell&quot;,
            &quot;source&quot;: &quot;Windows.Terminal.Azure&quot;
        }
    ]
},

// Add custom color schemes to this array.
// To learn more about color schemes, visit https://aka.ms/terminal-color-schemes
&quot;schemes&quot;: [],

// Add custom keybindings to this array.
// To unbind a key combination from your defaults.json, set the command to &quot;unbound&quot;.
// To learn more about keybindings, visit https://aka.ms/terminal-keybindings
&quot;keybindings&quot;:
[
    // Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json.
    // These two lines additionally bind them to Ctrl+C and Ctrl+V.
    // To learn more about selection, visit https://aka.ms/terminal-selection
    { &quot;command&quot;: {&quot;action&quot;: &quot;copy&quot;, &quot;singleLine&quot;: false }, &quot;keys&quot;: &quot;ctrl+c&quot; },
    { &quot;command&quot;: &quot;paste&quot;, &quot;keys&quot;: &quot;ctrl+v&quot; },

    // Press Ctrl+Shift+F to open the search box
    { &quot;command&quot;: &quot;find&quot;, &quot;keys&quot;: &quot;ctrl+shift+f&quot; },

    // Press Alt+Shift+D to open a new pane.
    // - &quot;split&quot;: &quot;auto&quot; makes this pane open in the direction that provides the most surface area.
    // - &quot;splitMode&quot;: &quot;duplicate&quot; makes the new pane use the focused pane's profile.
    // To learn more about panes, visit https://aka.ms/terminal-panes
    { &quot;command&quot;: { &quot;action&quot;: &quot;splitPane&quot;, &quot;split&quot;: &quot;auto&quot;, &quot;splitMode&quot;: &quot;duplicate&quot; }, &quot;keys&quot;: &quot;alt+shift+d&quot; }
]
</code></pre>
<p>}</p>
<pre><code></code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ 配置]]></title>
        <id>https://blog.dltech.xyz/post/c-pei-zhi/</id>
        <link href="https://blog.dltech.xyz/post/c-pei-zhi/">
        </link>
        <updated>2020-07-01T12:07:42.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-json">{
    &quot;configurations&quot;: [
        {
            &quot;name&quot;: &quot;Win32&quot;,
            &quot;includePath&quot;: [
                &quot;${workspaceFolder}/**&quot;
            ],
            &quot;defines&quot;: [
                &quot;_DEBUG&quot;,
                &quot;UNICODE&quot;,
                &quot;_UNICODE&quot;
            ],
            &quot;intelliSenseMode&quot;: &quot;gcc-x64&quot;,
            &quot;cStandard&quot;: &quot;c11&quot;,
            &quot;cppStandard&quot;: &quot;c++17&quot;,
            &quot;compilerPath&quot;: &quot;C:/mingw64/bin/g++.exe&quot;
        }
    ],
    &quot;version&quot;: 4
}
</code></pre>
<hr>
<pre><code class="language-json">{//task.json
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	// https://code.visualstudio.com/docs/editor/tasks
	&quot;version&quot;: &quot;2.0.0&quot;,
	&quot;tasks&quot;: [{
			&quot;type&quot;: &quot;shell&quot;,
			&quot;label&quot;: &quot;C/C++: g++.exe build active file&quot;, // 任务名称，与launch.json的preLaunchTask相对应
			&quot;command&quot;: &quot;g++&quot;,//要使用的编译器，c用gcc
			&quot;args&quot;: [
				&quot;${file}&quot;,
				&quot;-o&quot;,// 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
				&quot;${fileDirname}/${fileBasenameNoExtension}.exe&quot;,
				&quot;-g&quot;,    // 生成和调试有关的信息
				&quot;-Wall&quot;, // 开启额外警告
				&quot;-static-libgcc&quot;,     // 静态链接libgcc，一般都会加上
				&quot;-fexec-charset=GBK&quot;, // 生成的程序使用GBK编码，不加这一条会导致Win下输出中文乱码
				// &quot;-std=c11&quot;, // C++最新标准为c++17，或根据自己的需要进行修改
			], // 编译的命令，其实相当于VSC帮你在终端中输了这些东西
			&quot;group&quot;: {
				&quot;kind&quot;: &quot;build&quot;,
				&quot;isDefault&quot;: true // 不为true时ctrl shift B就要手动选择了
			},
			&quot;presentation&quot;: {
				&quot;echo&quot;: true,
				&quot;reveal&quot;: &quot;always&quot;, // 执行任务时是否跳转到终端面板，可以为always，silent，never。具体参见VSC的文档
				&quot;focus&quot;: false,     // 设为true后可以使执行task时焦点聚集在终端，但对编译C/C++来说，设为true没有意义
				&quot;panel&quot;: &quot;shared&quot;   // 不同的文件的编译信息共享一个终端面板
			},
			&quot;problemMatcher&quot;: []
			//&quot;type&quot;: &quot;process&quot;, // process是vsc把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
			// &quot;problemMatcher&quot;:&quot;$gcc&quot; // 此选项可以捕捉编译时终端里的报错信息；但因为有Lint，再开这个可能有双重报

	}],
}

</code></pre>
<hr>
<pre><code class="language-json">{//launch.json
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    // https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md
    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [{
            &quot;name&quot;: &quot;(gdb) Launch&quot;,// 配置名称，将会在启动配置的下拉菜单中显示
            &quot;preLaunchTask&quot;: &quot;C/C++: g++.exe build active file&quot;,//调试前执行的任务，就是之前配置的tasks.json中的label字段
            &quot;type&quot;: &quot;cppdbg&quot;,//配置类型，cppdbg对应cpptools提供的调试功能；可以认为此处只能是cppdbg
            &quot;request&quot;: &quot;launch&quot;,//请求配置类型，可以为launch（启动）或attach（附加）
            &quot;program&quot;: &quot;${fileDirname}\\${fileBasenameNoExtension}.exe&quot;,//调试程序的路径名称
            &quot;args&quot;: [],//程序调试时传递给程序的命令行参数，一般设为空即可
            &quot;stopAtEntry&quot;: false,// 设为true时程序将暂停在程序入口处，相当于在main上打断点
            &quot;cwd&quot;: &quot;${workspaceFolder}&quot;,// 调试程序时的工作目录，此为工作区文件夹；改成${fileDirname}可变为文件所在目录
            &quot;environment&quot;: [],// 环境变量
            &quot;externalConsole&quot;: true,//true显示外置的控制台窗口，false显示内置终端
            &quot;internalConsoleOptions&quot;: &quot;neverOpen&quot;, // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，你应该不需要对gdb手动输命令吧？
            &quot;MIMode&quot;: &quot;gdb&quot;,
            &quot;miDebuggerPath&quot;: &quot;gdb.exe&quot;,//调试器路径，Windows下后缀不能省略，Linux下则不要:https://github.com/microsoft/vscode-cpptools/issues/2778
            &quot;setupCommands&quot;: [
                {// 模板自带，好像可以更好地显示STL容器的内容，具体作用自行Google
                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,
                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,
                    &quot;ignoreFailures&quot;: true
                }
            ]
        }]
}
</code></pre>
<hr>
<p>sftp.json</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;tfae.dtx&quot;,
    &quot;protocol&quot;: &quot;sftp&quot;,
    &quot;host&quot;: &quot;10.xxxxxxxx.22&quot;,
    &quot;port&quot;: 36000,
    &quot;username&quot;: &quot;xxxxxxxx&quot;,
    &quot;password&quot;: &quot;xxxxxx&quot;,
    &quot;uploadOnSave&quot;: true,
    &quot;ignore&quot;: [
        &quot;\\.VSCode&quot;,
        &quot;\\.git&quot;,
        &quot;\\.DS_Store&quot;,
        &quot;\\.svn&quot;,
        &quot;\\.history&quot;,
        &quot;\\.IAB&quot;,
        &quot;\\.IAD&quot;,
        &quot;\\.IMB&quot;,
        &quot;\\.IMD&quot;,
        &quot;\\.PFI&quot;,
        &quot;\\.PO&quot;,
        &quot;\\.PR&quot;,
        &quot;\\.PRI&quot;,
        &quot;\\.PS&quot;,
        &quot;\\.WK3&quot;
    ],
    &quot;remotePath&quot;: &quot;/root/home/denniszhu/tarsCpp&quot;
}
</code></pre>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ CAE Stamping Simulation]]></title>
        <id>https://blog.dltech.xyz/post/cae-stamping-simulation/</id>
        <link href="https://blog.dltech.xyz/post/cae-stamping-simulation/">
        </link>
        <updated>2020-06-29T14:12:23.000Z</updated>
        <content type="html"><![CDATA[<p>研究了下。。。啊 太菜了</p>
<h2 id="人httpsi-itemjdcom45305383903html">人：https://i-item.jd.com/45305383903.html&gt;</h2>
<h2 id="书">书：</h2>
<ul>
<li>冲压CAE技术应用（附光盘）：<a href="https://item.jd.com/11886860.html">https://item.jd.com/11886860.html</a></li>
<li>金属塑性成形CAE应用：DYNAFORM：<a href="https://item.jd.com/11605475.html">https://item.jd.com/11605475.html</a></li>
<li>板料成形CAE设计及应用：基于Dynaform（英文） [CAE Design and Application of Sheet Metal Forming：Based on Dynaform]：<a href="https://item.jd.com/12628936.html">https://item.jd.com/12628936.html</a></li>
</ul>
<p>https://1drv.ms/w/s!AmvfcA2CS8LNgskmXQJEE8PgHvVMrA</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Leetcode_Container With Most Water]]></title>
        <id>https://blog.dltech.xyz/post/leetcode_container-with-most-water/</id>
        <link href="https://blog.dltech.xyz/post/leetcode_container-with-most-water/">
        </link>
        <updated>2020-06-27T18:12:17.000Z</updated>
        <content type="html"><![CDATA[<p>https://leetcode.com/submissions/detail/359042687/</p>
]]></content>
    </entry>
</feed>